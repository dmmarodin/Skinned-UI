@use '../colors';
@use '../variables';

$padding-vertical: 0.45rem;
$padding-horizontal: 1.5rem;
$outline-border-width: 3px;
$font-size: 0.85rem;

@mixin hover_brightness {
	&:before {
		content: '';
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		backdrop-filter: brightness(120%);
		border-radius: 5px;
		transition: opacity ease-in-out 0.15s;
		opacity: 0;
	}

	&:hover:before {
		opacity: 1;
	}
}

@mixin button_color($color-name: null) {
	@if $color-name {
		$color: map-get(colors.$accent, $color-name);

		&.#{$color-name}:not(.outline) {
			background-color: $color;
			color: colors.$text-white;

			@include hover_brightness;
		}

		&.#{$color-name}.outline {
			background-color: transparent;
			border-width: $outline-border-width;
			border-style: solid;
			border-color: $color;
			color: $color;
			padding: calc($padding-vertical - $outline-border-width)
				calc($padding-horizontal - $outline-border-width);
			transition: background-color ease-out 0.07s, color ease-out 0.07s;

			&:hover {
				background-color: $color;
				color: colors.$text-white;
			}
		}
	} @else {
		background-color: colors.$background-light;
		color: colors.$text-white;

		&:not(.outline) {
			@include hover_brightness;
		}
	}
}

.sk-button {
	padding: $padding-vertical 1.5rem;
	border-radius: 5px;
	position: relative;
	cursor: pointer;
	font-size: $font-size;
	font-weight: bold;
	font-size: variables.$text-small;

	@include button_color;
	@include button_color('blue');
	@include button_color('purple');
	@include button_color('green');
	@include button_color('red');
}
